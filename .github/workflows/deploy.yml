name: Deploy to AWS ECS Fargate

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to ECR
        run: |
          IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.AWS_RESOURCE_PREFIX }}
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: Render taskdef.json from template
        run: |
          envsubst < taskdef.template.json > taskdef.json
        env:
          DB_NAME: ${{ secrets.AWS_DB_NAME }}
          DB_HOST: ${{ secrets.AWS_DB_HOST }}
          DB_PORT: ${{ secrets.AWS_DB_PORT }}
          DB_USER: ${{ secrets.AWS_DB_USER }}
          DB_PASSWORD: ${{ secrets.AWS_DB_PASSWORD }}
          REGION: ${{ secrets.AWS_REGION }}
          RESOURCE_PREFIX: ${{ secrets.AWS_RESOURCE_PREFIX }}
          ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          service: ${{ secrets.AWS_RESOURCE_PREFIX }}-fg-task-service-yocngrq8
          cluster: ${{ secrets.AWS_RESOURCE_PREFIX }}-fg-cluster
          task-definition: taskdef.json
